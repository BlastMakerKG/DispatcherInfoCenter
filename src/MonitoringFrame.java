import com.loclibrary.LocationClass;
import com.teamdev.jxmaps.javafx.MapView;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.application.Platform.exit;
import javafx.stage.FileChooser;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.tools.DocumentationTool.Location;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author student2
 */
public class MonitoringFrame extends javax.swing.JFrame {

    ServerSocket server_scoket;
    Socket socket;
    DefaultTableModel modeltab, modeltab2;
    CreateServer[] createsev = new CreateServer[10];
    static ExecutorService executeIt = Executors.newFixedThreadPool(2);
    String predString;
    /**
     * Creates new form MonitoringFrame
     */
    public MonitoringFrame() {
        initComponents();
        modeltab = (DefaultTableModel) location_table.getModel();
        modeltab2 = (DefaultTableModel) location_table2.getModel();
     
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        save_bnt = new java.awt.Button();
        exit_btn = new javax.swing.JButton();
        create_btn = new javax.swing.JButton();
        server_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        status_msg = new javax.swing.JLabel();
        excep_msg = new javax.swing.JLabel();
        class_list = new java.awt.List();
        jScrollPane2 = new javax.swing.JScrollPane();
        location_table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        location_table2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        connect_avto_list = new javax.swing.JList<>();
        status_msg1 = new javax.swing.JLabel();
        excep_msg1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Main.setBackground(new java.awt.Color(255, 255, 255));
        Main.setName("Главное"); // NOI18N

        save_bnt.setActionCommand("Сохранить");
        save_bnt.setLabel("Cохранить");
        save_bnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_bntActionPerformed(evt);
            }
        });

        exit_btn.setBackground(new java.awt.Color(255, 102, 102));
        exit_btn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        exit_btn.setForeground(new java.awt.Color(255, 255, 255));
        exit_btn.setText("Выйти");
        exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btnActionPerformed(evt);
            }
        });

        create_btn.setBackground(new java.awt.Color(0, 204, 0));
        create_btn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        create_btn.setForeground(new java.awt.Color(255, 255, 255));
        create_btn.setText("Помощь");
        create_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_btnActionPerformed(evt);
            }
        });

        server_btn.setBackground(new java.awt.Color(255, 102, 0));
        server_btn.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        server_btn.setForeground(new java.awt.Color(255, 255, 255));
        server_btn.setText("Начать передачу данных");
        server_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                server_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Подключенные устройства");

        status_msg.setText("Статус:");

        class_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                class_listActionPerformed(evt);
            }
        });

        location_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Дата", "Широта", "Долгота", "Абсолютная высота", "Расстояние", "Скорость"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(location_table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(class_list, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(status_msg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(excep_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(create_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(server_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save_bnt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(class_list, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(status_msg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(excep_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(server_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(create_btn)
                            .addComponent(exit_btn))
                        .addGap(22, 22, 22)
                        .addComponent(save_bnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        Main.addTab("Модуль оцифровки трассы", jPanel1);

        location_table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Дата", "Широта", "Долгота", "Абсолютная высота", "Расстояние", "Скорость"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(location_table2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Подключенные устройства");

        connect_avto_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(connect_avto_list);

        status_msg1.setText("Статус:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(status_msg1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(excep_msg1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(status_msg1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excep_msg1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Main.addTab("Положение транспортов", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1148, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 553, Short.MAX_VALUE)
        );

        Main.addTab("Отображение", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1153, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main)
        );

        Main.getAccessibleContext().setAccessibleName("Главное");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void create_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_btnActionPerformed
        // TODO add your handling code here:
        Runnable run = new Runnable()
        {
            @Override
            public void run() {
            int i= 0;
            int count =1;
                while(true)
                {
                    try{
                        for(int j=0; j < createsev.length; j++)
                        {
                            if(predString == null)
                            {
                             String str = createsev[j].getData();
                             String[] subStr1, subStr2;
                             String delimeter = ",";  
                             subStr1 = str.split(delimeter);
                             modeltab.insertRow(modeltab.getRowCount(), new Object[]{Integer.parseInt(subStr1[0])+" "+count++,subStr1[1],Double.parseDouble(subStr1[2]),
                                                                         Double.parseDouble(subStr1[3]),Double.parseDouble(subStr1[4]),Double.parseDouble(subStr1[5]),Double.parseDouble(subStr1[6])});
  
                             predString = str;
                            }
                            else{
                             String str = createsev[j].getData();
                             if(str != predString){
                             String[] subStr1, subStr2;
                             String delimeter = ",";  
                             subStr1 = str.split(delimeter);
                             modeltab.insertRow(modeltab.getRowCount(), new Object[]{Integer.parseInt(subStr1[0])+" "+count++,subStr1[1],Double.parseDouble(subStr1[2]),
                                                                         Double.parseDouble(subStr1[3]),Double.parseDouble(subStr1[4]),Double.parseDouble(subStr1[5]),Double.parseDouble(subStr1[6])});
  
                             predString = str;
                                 
                             }                
                            }
                        }          
                    }
                    catch(Exception ex)
                    {
                        ex.printStackTrace();
                    }
          
                    try {
                    Thread.sleep(2000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MonitoringFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
                
            }
            
        };
        Thread thread = new Thread(run);
        thread.start();
        
    }//GEN-LAST:event_create_btnActionPerformed

    private void server_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_server_btnActionPerformed
        // TODO add your handling code here:
       
        try{
            ServerSocket serverSocket = new ServerSocket(24500);
            System.out.println("Сервер создан ждем подключения");
             status_msg.setText("Сервер успешно создан"); 

            
            Runnable runnable = new Runnable() {
                @Override
                public void run() {
                    int i =0;
                   while(!serverSocket.isClosed())
                   {
                 Socket clientSocket;
                       try {
                           clientSocket = serverSocket.accept();
                           createsev[i] = new CreateServer(clientSocket,class_list, location_table,excep_msg);
                           executeIt.execute(createsev[i]);
                           createsev[i] = new CreateServer(clientSocket,class_list, location_table2,excep_msg,i);
                           executeIt.execute(createsev[i]);
                           i++;
                       } catch (IOException ex) {
                           Logger.getLogger(MonitoringFrame.class.getName()).log(Level.SEVERE, null, ex);
                       }
                 
                   JOptionPane.showMessageDialog(null, 
                              "Клиент подключился", 
                              "Клиент", 
                              JOptionPane.WARNING_MESSAGE);
                 
            }
                }
            };
            
            Thread myThread = new Thread(runnable);
            myThread.start();
            
           
        }
        
        catch(Exception ex)
        {
            excep_msg.setText(ex.getMessage());
        }
       
    }//GEN-LAST:event_server_btnActionPerformed

    private void class_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_class_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_class_listActionPerformed

    private void exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
        // TODO add your handling code here:
      System.exit(0);
    }//GEN-LAST:event_exit_btnActionPerformed

    private void save_bntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_bntActionPerformed
        // TODO add your handling code here:
        
    String str = createsev[0].getData();
                             if(str != predString){
                             String[] subStr1, subStr2;
                             String delimeter = ",";  
                             subStr1 = str.split(delimeter);
                             modeltab.insertRow(5, new Object[]{Integer.parseInt(subStr1[0]),"Hello",Double.parseDouble(subStr1[2]),
                                                                         Double.parseDouble(subStr1[3]),Double.parseDouble(subStr1[4]),Double.parseDouble(subStr1[5]),Double.parseDouble(subStr1[6])});
//        try{
//            
//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.showSaveDialog(this);
//         File file =fileChooser.getSelectedFile();
//         
//         ExportData.exportToCSV(location_table, file);
//         
//        }

//        JFileChooser fileChooser = new JFileChooser();
//        fileChooser.setDialogTitle("Specify a file save");
//        int userSelection = fileChooser.showSaveDialog(this);
//        if(userSelection == JFileChooser.APPROVE_OPTION){
//            File fileToSave = fileChooser.getSelectedFile();
//            //lets write to file
//         
//            try {
//                  FileWriter fw = new FileWriter(fileToSave);
//                BufferedWriter bw = new BufferedWriter(fw);
//                for (int i = 0; i<location_table.getRowCount(); i++) 
//                {
//                    for (int j = 0; j<location_table.getColumnCount(); j++) {
//                        //write
//                        bw.write(location_table.getValueAt(i, j).toString()+",");
//                    }
//                    bw.newLine();//record per line 
//                }
//                JOptionPane.showMessageDialog(this, "SUCCESSFULLY LOADED","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
//                bw.close();
//                fw.close();
//            } catch (IOException ex) {
//               JOptionPane.showMessageDialog(this, "ERROR","ERROR MESSAGE",JOptionPane.ERROR_MESSAGE);
//            }}

//
//            try (PrintWriter writer = new PrintWriter(new File("test.csv"))) {
//
//      StringBuilder sb = new StringBuilder();
//      sb.append("id,");
//      sb.append(';');
//      sb.append("Name");
//      sb.append('\n');
//
//      sb.append("1");
//      sb.append(';');
//      sb.append("Prashant Ghimire");
//      sb.append('\n');
//
//      writer.write(sb.toString());
//
//      System.out.println("done!");
//
//    } catch (FileNotFoundException e) {
//      System.out.println(e.getMessage());
//    }
//            
//        }
//        
// 
        
        
    }//GEN-LAST:event_save_bntActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitoringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitoringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitoringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitoringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitoringFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Main;
    private java.awt.List class_list;
    private javax.swing.JList<String> connect_avto_list;
    private javax.swing.JButton create_btn;
    private javax.swing.JLabel excep_msg;
    private javax.swing.JLabel excep_msg1;
    private javax.swing.JButton exit_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable location_table;
    private javax.swing.JTable location_table2;
    private java.awt.Button save_bnt;
    private javax.swing.JButton server_btn;
    private javax.swing.JLabel status_msg;
    private javax.swing.JLabel status_msg1;
    // End of variables declaration//GEN-END:variables

  
}
